apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-05-18T01:39:49Z"
  generation: 1
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"strapi"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"APP_NAME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"DATABASE_CLIENT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"DATABASE_HOST"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"DATABASE_NAME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"DATABASE_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":1337,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: Go-http-client
    operation: Update
    time: "2020-05-18T01:39:49Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:replicas: {}
        f:unavailableReplicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-05-18T02:36:13Z"
  name: strapi-deploy
  namespace: default
  resourceVersion: "13020"
  selfLink: /apis/apps/v1/namespaces/default/deployments/strapi-deploy
  uid: a5465cb3-0e95-4d6f-a2e4-47bcce91d26f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: strapi
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: strapi
    spec:
      containers:
      - env:
        - name: APP_NAME
          value: strapi-app
        - name: DATABASE_CLIENT
          value: mongo
        - name: DATABASE_HOST
          value: mongo-svc
        - name: DATABASE_PORT
          value: "27017"
        - name: DATABASE_NAME
          value: strapi
        image: martintarres/strapi-app:latest
        imagePullPolicy: IfNotPresent
        name: strapi
        ports:
        - containerPort: 1337
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2020-05-18T01:39:50Z"
    lastUpdateTime: "2020-05-18T01:41:42Z"
    message: ReplicaSet "strapi-deploy-5cc959599" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-05-18T02:36:13Z"
    lastUpdateTime: "2020-05-18T02:36:13Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
